buildscript {
    ext {
        springBootVersion = '2.2.3.RELEASE'
    }

    repositories {
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath gradleApi()
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'com.bmuschko:gradle-docker-plugin:6.4.0'
    }
}

plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '2.2.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.liquibase.gradle' version '2.0.3'
}

ext {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    postgresContainerVersion = '12.3-alpine'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        implementation 'org.projectlombok:lombok:1.18.12'
        annotationProcessor 'org.projectlombok:lombok:1.18.12'

        testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
        testImplementation 'org.mockito:mockito-core:2.10.0'
    }
}

subprojects {
    apply plugin: 'java-library'
}

group = 'ai.salesfox'
version = 'latest'
mainClassName = 'ai.salesfox.portal.PortalApplication'

startScripts.enabled = false
distZip.enabled = false
bootDistZip.enabled = false
distTar.enabled = false
bootDistTar.enabled = false

apply from: 'buildSrc/tasks.gradle'

dependencies {
    implementation project(':common')
    implementation project(':integration-scribeless')
    implementation project(':integration-shipstation')

    // Spring
    implementation 'org.springframework:spring-context'
    implementation 'org.springframework:spring-jms'
    implementation 'org.springframework:spring-webmvc'

    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    implementation 'org.springframework.data:spring-data-jpa'
    implementation 'org.springframework.batch:spring-batch-core'

    // Spring Security
    implementation 'org.springframework.security:spring-security-core'
    implementation 'org.springframework.security:spring-security-web'
    implementation 'org.springframework.security:spring-security-config'

    // External Integrations
    implementation platform('software.amazon.awssdk:bom:2.15.2')
    implementation 'software.amazon.awssdk:s3'
    implementation 'com.stripe:stripe-java:20.14.0'

    // Tools & Services
    implementation 'org.apache.tomcat.embed:tomcat-embed-core'
    implementation 'org.freemarker:freemarker:2.3.30'
    implementation 'javax.mail:javax.mail-api:1.6.2'
    runtimeOnly 'org.aspectj:aspectjweaver'
    runtimeOnly 'com.sun.mail:javax.mail:1.6.2'
    runtimeOnly 'org.yaml:snakeyaml:1.25'

    // Database
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.hibernate:hibernate-entitymanager:5.4.10.Final'
    implementation 'jakarta.persistence:jakarta.persistence-api'
    implementation 'com.zaxxer:HikariCP'

    // Documentation
    implementation 'io.springfox:springfox-swagger2:2.8.0'
    implementation 'io.springfox:springfox-swagger-ui:2.8.0'

    if (getGradle().getStartParameter().taskNames.contains('runServer')) {
        runtimeClasspath 'org.testcontainers:postgresql:1.15.0-rc2'
        runtimeClasspath 'org.springframework.cloud:spring-cloud-starter:2.2.3.RELEASE'
        runtimeClasspath "com.playtika.testcontainers:embedded-postgresql:1.78"
        runtimeClasspath 'org.springframework.boot:spring-boot-devtools'
    }
}

test {
    useJUnitPlatform()
}
